/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications. All endpoints are versioned individually to allow for granular upgrades. We follow the [Semantic Versioning scheme](https://semver.org/).
 *
 * The version of the OpenAPI document: 4.1.0
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MotorScooterCostingOptionsAllOf
 */
export interface MotorScooterCostingOptionsAllOf {
    /**
     * A measure of willingness to use primary roads. Values near 0 attempt to avoid primary roads and stay on roads with lower speeds, and values near 1 indicate the rider is more comfortable on these roads.
     * @type {number}
     * @memberof MotorScooterCostingOptionsAllOf
     */
    usePrimary?: number;
    /**
     * A measure of willingness to take tackle hills. Values near 0 attempt to avoid hills and steeper grades even if it means a longer route, and values near 1 indicates that the rider does not fear them. Note that as some routes may be impossible without hills, 0 does not guarantee avoidance of them.
     * @type {number}
     * @memberof MotorScooterCostingOptionsAllOf
     */
    useHills?: number;
}

/**
 * Check if a given object implements the MotorScooterCostingOptionsAllOf interface.
 */
export function instanceOfMotorScooterCostingOptionsAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MotorScooterCostingOptionsAllOfFromJSON(json: any): MotorScooterCostingOptionsAllOf {
    return MotorScooterCostingOptionsAllOfFromJSONTyped(json, false);
}

export function MotorScooterCostingOptionsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): MotorScooterCostingOptionsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'usePrimary': !exists(json, 'use_primary') ? undefined : json['use_primary'],
        'useHills': !exists(json, 'use_hills') ? undefined : json['use_hills'],
    };
}

export function MotorScooterCostingOptionsAllOfToJSON(value?: MotorScooterCostingOptionsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'use_primary': value.usePrimary,
        'use_hills': value.useHills,
    };
}

