/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications. All endpoints are versioned individually to allow for granular upgrades. We follow the [Semantic Versioning scheme](https://semver.org/).
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BikeNetwork
 */
export interface BikeNetwork {
    /**
     * 
     * @type {boolean}
     * @memberof BikeNetwork
     */
    mountain?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BikeNetwork
     */
    local?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BikeNetwork
     */
    regional?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BikeNetwork
     */
    national?: boolean;
}

/**
 * Check if a given object implements the BikeNetwork interface.
 */
export function instanceOfBikeNetwork(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BikeNetworkFromJSON(json: any): BikeNetwork {
    return BikeNetworkFromJSONTyped(json, false);
}

export function BikeNetworkFromJSONTyped(json: any, ignoreDiscriminator: boolean): BikeNetwork {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mountain': !exists(json, 'mountain') ? undefined : json['mountain'],
        'local': !exists(json, 'local') ? undefined : json['local'],
        'regional': !exists(json, 'regional') ? undefined : json['regional'],
        'national': !exists(json, 'national') ? undefined : json['national'],
    };
}

export function BikeNetworkToJSON(value?: BikeNetwork | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mountain': value.mountain,
        'local': value.local,
        'regional': value.regional,
        'national': value.national,
    };
}

