/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications. All endpoints are versioned individually to allow for granular upgrades. We follow the [Semantic Versioning scheme](https://semver.org/).
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Coordinate } from './Coordinate';
import {
    CoordinateFromJSON,
    CoordinateFromJSONTyped,
    CoordinateToJSON,
} from './Coordinate';

/**
 * 
 * @export
 * @interface HeightRequest
 */
export interface HeightRequest {
    /**
     * An identifier to disambiguate requests (echoed by the server).
     * @type {string}
     * @memberof HeightRequest
     */
    id?: string;
    /**
     * REQUIRED if `encoded_polyline` is not present.
     * @type {Array<Coordinate>}
     * @memberof HeightRequest
     */
    shape?: Array<Coordinate>;
    /**
     * REQUIRED if `shape` is not present. An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm).
     * @type {string}
     * @memberof HeightRequest
     */
    encodedPolyline?: string;
    /**
     * Specifies whether the polyline is encoded with 6 digit precision (polyline6) or 5 digit precision (polyline5).
     * @type {string}
     * @memberof HeightRequest
     */
    shapeFormat?: HeightRequestShapeFormatEnum;
    /**
     * Controls whether or not the returned array is one-dimensional (height only) or two-dimensional (with a range and height). The range dimension can be used to generate a graph or steepness gradient along a route.
     * @type {boolean}
     * @memberof HeightRequest
     */
    range?: boolean;
    /**
     * The decimal precision (number of digits after the point) of the output. When 0, integer values are returned. Valid values are 0, 1, and 2.
     * @type {number}
     * @memberof HeightRequest
     */
    heightPrecision?: number;
}


/**
 * @export
 */
export const HeightRequestShapeFormatEnum = {
    Polyline6: 'polyline6',
    Polyline5: 'polyline5'
} as const;
export type HeightRequestShapeFormatEnum = typeof HeightRequestShapeFormatEnum[keyof typeof HeightRequestShapeFormatEnum];


/**
 * Check if a given object implements the HeightRequest interface.
 */
export function instanceOfHeightRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HeightRequestFromJSON(json: any): HeightRequest {
    return HeightRequestFromJSONTyped(json, false);
}

export function HeightRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): HeightRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'shape': !exists(json, 'shape') ? undefined : ((json['shape'] as Array<any>).map(CoordinateFromJSON)),
        'encodedPolyline': !exists(json, 'encoded_polyline') ? undefined : json['encoded_polyline'],
        'shapeFormat': !exists(json, 'shape_format') ? undefined : json['shape_format'],
        'range': !exists(json, 'range') ? undefined : json['range'],
        'heightPrecision': !exists(json, 'height_precision') ? undefined : json['height_precision'],
    };
}

export function HeightRequestToJSON(value?: HeightRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'shape': value.shape === undefined ? undefined : ((value.shape as Array<any>).map(CoordinateToJSON)),
        'encoded_polyline': value.encodedPolyline,
        'shape_format': value.shapeFormat,
        'range': value.range,
        'height_precision': value.heightPrecision,
    };
}

