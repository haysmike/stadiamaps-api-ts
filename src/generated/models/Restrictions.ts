/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 5.0.6
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Restrictions
 */
export interface Restrictions {
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    golfCart?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    truck?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    pedestrian?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    wheelchair?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    taxi?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    hOV?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    emergency?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    motorcycle?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    car?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    moped?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    bus?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Restrictions
     */
    bicycle?: boolean;
}

/**
 * Check if a given object implements the Restrictions interface.
 */
export function instanceOfRestrictions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RestrictionsFromJSON(json: any): Restrictions {
    return RestrictionsFromJSONTyped(json, false);
}

export function RestrictionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Restrictions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'golfCart': !exists(json, 'golf_cart') ? undefined : json['golf_cart'],
        'truck': !exists(json, 'truck') ? undefined : json['truck'],
        'pedestrian': !exists(json, 'pedestrian') ? undefined : json['pedestrian'],
        'wheelchair': !exists(json, 'wheelchair') ? undefined : json['wheelchair'],
        'taxi': !exists(json, 'taxi') ? undefined : json['taxi'],
        'hOV': !exists(json, 'HOV') ? undefined : json['HOV'],
        'emergency': !exists(json, 'emergency') ? undefined : json['emergency'],
        'motorcycle': !exists(json, 'motorcycle') ? undefined : json['motorcycle'],
        'car': !exists(json, 'car') ? undefined : json['car'],
        'moped': !exists(json, 'moped') ? undefined : json['moped'],
        'bus': !exists(json, 'bus') ? undefined : json['bus'],
        'bicycle': !exists(json, 'bicycle') ? undefined : json['bicycle'],
    };
}

export function RestrictionsToJSON(value?: Restrictions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'golf_cart': value.golfCart,
        'truck': value.truck,
        'pedestrian': value.pedestrian,
        'wheelchair': value.wheelchair,
        'taxi': value.taxi,
        'HOV': value.hOV,
        'emergency': value.emergency,
        'motorcycle': value.motorcycle,
        'car': value.car,
        'moped': value.moped,
        'bus': value.bus,
        'bicycle': value.bicycle,
    };
}

